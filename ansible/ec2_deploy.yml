- name: Get existing instance id
  hosts: localhost
  connection: local
  tasks:
    - name: Get id
      ec2_instance_info:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_session_token }}"
        region: us-east-1
      register: ec2_info

- name: Deploy to EC2
  hosts: localhost
  connection: local
  tasks:
    - name: Save private key
      copy: content="{{ private_key }}" dest="~/devops.pem" mode=0600

    - name: Launch EC2 instance
      ec2:
        instance_type: t2.micro
        image: ami-085925f297f89fce1
        region: us-east-1
        key_name: devops
        vpc_subnet_id: subnet-59c6b778
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: "{{aws_access_key_id}}"
        aws_secret_key: "{{aws_secret_access_key}}"
        security_token: "{{aws_session_token}}"
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: "{{ec2.instances}}"

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: "{{ec2.instances}}"

- name: Configure EC2
  hosts: launched
  conection: ssh
  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Build docker with eshop
      shell: docker run -p 80:3000 584319905078.dkr.ecr.us-east-1.amazonaws.com/devops:latest
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Cleanup
  hosts: localhost
  connection: local
  tasks:
    - name: Terminate EC2 instance
      ec2:
        aws_access_key: "{{aws_access_key_id}}"
        aws_secret_key: "{{aws_secret_access_key}}"
        security_token: "{{aws_session_token}}"
        region: us-east-1
        instance_ids: "{{ item.instance_id }}"
        state: absent
        wait: yes
      with_items: "{{ec2_info.instances}}"
